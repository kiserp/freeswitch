From 90e888bc6fe3f28e8c1dd8eae8e4b585c494ab3d Mon Sep 17 00:00:00 2001
From: kiserp <mail@kiserp.co>
Date: Fri, 12 Feb 2021 17:41:58 +0700
Subject: [PATCH] changed queries to not use VIEWs

---
 .../applications/mod_commands/mod_commands.c  | 250 +++++++++++++++++-
 1 file changed, 245 insertions(+), 5 deletions(-)

diff --git a/src/mod/applications/mod_commands/mod_commands.c b/src/mod/applications/mod_commands/mod_commands.c
index 37eda79929..12c4922808 100644
--- a/src/mod/applications/mod_commands/mod_commands.c
+++ b/src/mod/applications/mod_commands/mod_commands.c
@@ -5744,9 +5744,84 @@ SWITCH_STANDARD_API(show_function)
 		}
 
 		if (!strcasecmp(command, "calls")) {
-			switch_snprintfv(sql, sizeof(sql), "select * from basic_calls where hostname='%q' order by call_created_epoch", switch_core_get_switchname());
+			// switch_snprintfv(sql, sizeof(sql), "select * from basic_calls where hostname='%q' order by call_created_epoch", switch_core_get_switchname());
+			switch_snprintfv(sql, sizeof(sql),  "select \n"
+											    "a.uuid as uuid,\n"
+											    "a.direction as direction,\n"
+											    "a.created as created,\n"
+											    "a.created_epoch as created_epoch,\n"
+											    "a.name as name,\n"
+											    "a.state as state,\n"
+											    "a.cid_name as cid_name,\n"
+											    "a.cid_num as cid_num,\n"
+											    "a.ip_addr as ip_addr,\n"
+											    "a.dest as dest,\n"
+											    "a.application as application,\n"
+											    "a.application_data as application_data,\n"
+											    "a.dialplan as dialplan,\n"
+											    "a.context as context,\n"
+											    "a.read_codec as read_codec,\n"
+											    "a.read_rate as read_rate,\n"
+											    "a.read_bit_rate as read_bit_rate,\n"
+											    "a.write_codec as write_codec,\n"
+											    "a.write_rate as write_rate,\n"
+											    "a.write_bit_rate as write_bit_rate,\n"
+											    "a.secure as secure,\n"
+											    "a.hostname as hostname,\n"
+											    "a.presence_id as presence_id,\n"
+											    "a.presence_data as presence_data,\n"
+											    "a.accountcode as accountcode,\n"
+											    "a.callstate as callstate,\n"
+											    "a.callee_name as callee_name,\n"
+											    "a.callee_num as callee_num,\n"
+											    "a.callee_direction as callee_direction,\n"
+											    "a.call_uuid as call_uuid,\n"
+											    "a.sent_callee_name as sent_callee_name,\n"
+											    "a.sent_callee_num as sent_callee_num,\n"
+											    "b.uuid as b_uuid,\n"
+											    "b.direction as b_direction,\n"
+											    "b.created as b_created,\n"
+											    "b.created_epoch as b_created_epoch,\n"
+											    "b.name as b_name,\n"
+											    "b.state as b_state,\n"
+											    "b.cid_name as b_cid_name,\n"
+											    "b.cid_num as b_cid_num,\n"
+											    "b.ip_addr as b_ip_addr,\n"
+											    "b.dest as b_dest,\n"
+											    "b.application as b_application,\n"
+											    "b.application_data as b_application_data,\n"
+											    "b.dialplan as b_dialplan,\n"
+											    "b.context as b_context,\n"
+											    "b.read_codec as b_read_codec,\n"
+											    "b.read_rate as b_read_rate,\n"
+											    "b.read_bit_rate as b_read_bit_rate,\n"
+											    "b.write_codec as b_write_codec,\n"
+											    "b.write_rate as b_write_rate,\n"
+											    "b.write_bit_rate as b_write_bit_rate,\n"
+											    "b.secure as b_secure,\n"
+											    "b.hostname as b_hostname,\n"
+											    "b.presence_id as b_presence_id,\n"
+											    "b.presence_data as b_presence_data,\n"
+											    "b.accountcode as b_accountcode,\n"
+											    "b.callstate as b_callstate,\n"
+											    "b.callee_name as b_callee_name,\n"
+											    "b.callee_num as b_callee_num,\n"
+											    "b.callee_direction as b_callee_direction,\n"
+											    "b.call_uuid as b_call_uuid,\n"
+											    "b.sent_callee_name as b_sent_callee_name,\n"
+											    "b.sent_callee_num as b_sent_callee_num,\n"
+											    "c.call_created_epoch as call_created_epoch \n"
+											    "from channels a \n"
+											    "left join calls c on a.uuid = c.caller_uuid and a.hostname = c.hostname \n"
+											    "left join channels b on b.uuid = c.callee_uuid and b.hostname = c.hostname \n"
+											    "where hostname='%q' and (a.uuid = c.caller_uuid or a.uuid not in (select callee_uuid from calls)) \n"
+											    "order by call_created_epoch  ;", switch_core_get_switchname());
 			if (argv[1] && !strcasecmp(argv[1], "count")) {
-				switch_snprintfv(sql, sizeof(sql), "select count(*) from basic_calls where hostname='%q'", switch_core_get_switchname());
+				switch_snprintfv(sql, sizeof(sql), "select count(*) \n" 
+											       "from channels a \n"
+											       "left join calls c on a.uuid = c.caller_uuid and a.hostname = c.hostname \n"
+											       "left join channels b on b.uuid = c.callee_uuid and b.hostname = c.hostname \n"
+											       "where hostname='%q' and (a.uuid = c.caller_uuid or a.uuid not in (select callee_uuid from calls)) \n", switch_core_get_switchname());
 				holder.justcount = 1;
 				if (argv[2] && argv[3] && !strcasecmp(argv[2], "as")) {
 					as = argv[3];
@@ -5794,17 +5869,182 @@ SWITCH_STANDARD_API(show_function)
 				}
 			}
 		} else if (!strcasecmp(command, "detailed_calls")) {
-			switch_snprintfv(sql, sizeof(sql), "select * from detailed_calls where hostname='%q' order by created_epoch", switch_core_get_switchname());
+			// switch_snprintfv(sql, sizeof(sql), "select * from detailed_calls where hostname='%q' order by created_epoch", switch_core_get_switchname());
+			switch_snprintfv(sql, sizeof(sql),"select \n"
+												"a.uuid as uuid,\n"
+												"a.direction as direction,\n"
+												"a.created as created,\n"
+												"a.created_epoch as created_epoch,\n"
+												"a.name as name,\n"
+												"a.state as state,\n"
+												"a.cid_name as cid_name,\n"
+												"a.cid_num as cid_num,\n"
+												"a.ip_addr as ip_addr,\n"
+												"a.dest as dest,\n"
+												"a.presence_id as presence_id,\n"
+												"a.presence_data as presence_data,\n"
+												"a.accountcode as accountcode,\n"
+												"a.callstate as callstate,\n"
+												"a.callee_name as callee_name,\n"
+												"a.callee_num as callee_num,\n"
+												"a.callee_direction as callee_direction,\n"
+												"a.call_uuid as call_uuid,\n"
+												"a.hostname as hostname,\n"
+												"a.sent_callee_name as sent_callee_name,\n"
+												"a.sent_callee_num as sent_callee_num,\n"
+												"b.uuid as b_uuid,\n"
+												"b.direction as b_direction,\n"
+												"b.created as b_created,\n"
+												"b.created_epoch as b_created_epoch,\n"
+												"b.name as b_name,\n"
+												"b.state as b_state,\n"
+												"b.cid_name as b_cid_name,\n"
+												"b.cid_num as b_cid_num,\n"
+												"b.ip_addr as b_ip_addr,\n"
+												"b.dest as b_dest,\n"
+												"b.presence_id as b_presence_id,\n"
+												"b.presence_data as b_presence_data,\n"
+												"b.accountcode as b_accountcode,\n"
+												"b.callstate as b_callstate,\n"
+												"b.callee_name as b_callee_name,\n"
+												"b.callee_num as b_callee_num,\n"
+												"b.callee_direction as b_callee_direction,\n"
+												"b.sent_callee_name as b_sent_callee_name,\n"
+												"b.sent_callee_num as b_sent_callee_num,\n"
+												"c.call_created_epoch as call_created_epoch \n"
+												"from channels a \n"
+												"left join calls c on a.uuid = c.caller_uuid and a.hostname = c.hostname \n"
+												"left join channels b on b.uuid = c.callee_uuid and b.hostname = c.hostname \n"
+												"where  hostname='%q' and (a.uuid = c.caller_uuid or a.uuid not in (select callee_uuid from calls))\n"
+												"order by call_created_epoch  ;\n", switch_core_get_switchname());
 			if (argv[2] && !strcasecmp(argv[1], "as")) {
 				as = argv[2];
 			}
 		} else if (!strcasecmp(command, "bridged_calls")) {
-			switch_snprintfv(sql, sizeof(sql), "select * from basic_calls where b_uuid is not null and hostname='%q' order by created_epoch", switch_core_get_switchname());
+			switch_snprintfv(sql, sizeof(sql), "select \n"
+											   "a.uuid as uuid,\n"
+											   "a.direction as direction,\n"
+											   "a.created as created,\n"
+											   "a.created_epoch as created_epoch,\n"
+											   "a.name as name,\n"
+											   "a.state as state,\n"
+											   "a.cid_name as cid_name,\n"
+											   "a.cid_num as cid_num,\n"
+											   "a.ip_addr as ip_addr,\n"
+											   "a.dest as dest,\n"
+											   "a.application as application,\n"
+											   "a.application_data as application_data,\n"
+											   "a.dialplan as dialplan,\n"
+											   "a.context as context,\n"
+											   "a.read_codec as read_codec,\n"
+											   "a.read_rate as read_rate,\n"
+											   "a.read_bit_rate as read_bit_rate,\n"
+											   "a.write_codec as write_codec,\n"
+											   "a.write_rate as write_rate,\n"
+											   "a.write_bit_rate as write_bit_rate,\n"
+											   "a.secure as secure,\n"
+											   "a.hostname as hostname,\n"
+											   "a.presence_id as presence_id,\n"
+											   "a.presence_data as presence_data,\n"
+											   "a.accountcode as accountcode,\n"
+											   "a.callstate as callstate,\n"
+											   "a.callee_name as callee_name,\n"
+											   "a.callee_num as callee_num,\n"
+											   "a.callee_direction as callee_direction,\n"
+											   "a.call_uuid as call_uuid,\n"
+											   "a.sent_callee_name as sent_callee_name,\n"
+											   "a.sent_callee_num as sent_callee_num,\n"
+											   "b.uuid as b_uuid,\n"
+											   "b.direction as b_direction,\n"
+											   "b.created as b_created,\n"
+											   "b.created_epoch as b_created_epoch,\n"
+											   "b.name as b_name,\n"
+											   "b.state as b_state,\n"
+											   "b.cid_name as b_cid_name,\n"
+											   "b.cid_num as b_cid_num,\n"
+											   "b.ip_addr as b_ip_addr,\n"
+											   "b.dest as b_dest,\n"
+											   "b.application as b_application,\n"
+											   "b.application_data as b_application_data,\n"
+											   "b.dialplan as b_dialplan,\n"
+											   "b.context as b_context,\n"
+											   "b.read_codec as b_read_codec,\n"
+											   "b.read_rate as b_read_rate,\n"
+											   "b.read_bit_rate as b_read_bit_rate,\n"
+											   "b.write_codec as b_write_codec,\n"
+											   "b.write_rate as b_write_rate,\n"
+											   "b.write_bit_rate as b_write_bit_rate,\n"
+											   "b.secure as b_secure,\n"
+											   "b.hostname as b_hostname,\n"
+											   "b.presence_id as b_presence_id,\n"
+											   "b.presence_data as b_presence_data,\n"
+											   "b.accountcode as b_accountcode,\n"
+											   "b.callstate as b_callstate,\n"
+											   "b.callee_name as b_callee_name,\n"
+											   "b.callee_num as b_callee_num,\n"
+											   "b.callee_direction as b_callee_direction,\n"
+											   "b.call_uuid as b_call_uuid,\n"
+											   "b.sent_callee_name as b_sent_callee_name,\n"
+											   "b.sent_callee_num as b_sent_callee_num,\n"
+											   "c.call_created_epoch as call_created_epoch \n"
+											   "from channels a \n"
+											   "left join calls c on a.uuid = c.caller_uuid and a.hostname = c.hostname \n"
+											   "left join channels b on b.uuid = c.callee_uuid and b.hostname = c.hostname \n"
+											   "where b_uuid is not null and hostname='%q' and (a.uuid = c.caller_uuid or a.uuid not in (select callee_uuid from calls)) \n"
+											   "order by call_created_epoch  ;", switch_core_get_switchname());
 			if (argv[2] && !strcasecmp(argv[1], "as")) {
 				as = argv[2];
 			}
 		} else if (!strcasecmp(command, "detailed_bridged_calls")) {
-			switch_snprintfv(sql, sizeof(sql), "select * from detailed_calls where b_uuid is not null and hostname='%q' order by created_epoch", switch_core_get_switchname());
+			switch_snprintfv(sql, sizeof(sql), 
+									"select \n"
+									"a.uuid as uuid,\n"
+									"a.direction as direction,\n"
+									"a.created as created,\n"
+									"a.created_epoch as created_epoch,\n"
+									"a.name as name,\n"
+									"a.state as state,\n"
+									"a.cid_name as cid_name,\n"
+									"a.cid_num as cid_num,\n"
+									"a.ip_addr as ip_addr,\n"
+									"a.dest as dest,\n"
+									"a.presence_id as presence_id,\n"
+									"a.presence_data as presence_data,\n"
+									"a.accountcode as accountcode,\n"
+									"a.callstate as callstate,\n"
+									"a.callee_name as callee_name,\n"
+									"a.callee_num as callee_num,\n"
+									"a.callee_direction as callee_direction,\n"
+									"a.call_uuid as call_uuid,\n"
+									"a.hostname as hostname,\n"
+									"a.sent_callee_name as sent_callee_name,\n"
+									"a.sent_callee_num as sent_callee_num,\n"
+									"b.uuid as b_uuid,\n"
+									"b.direction as b_direction,\n"
+									"b.created as b_created,\n"
+									"b.created_epoch as b_created_epoch,\n"
+									"b.name as b_name,\n"
+									"b.state as b_state,\n"
+									"b.cid_name as b_cid_name,\n"
+									"b.cid_num as b_cid_num,\n"
+									"b.ip_addr as b_ip_addr,\n"
+									"b.dest as b_dest,\n"
+									"b.presence_id as b_presence_id,\n"
+									"b.presence_data as b_presence_data,\n"
+									"b.accountcode as b_accountcode,\n"
+									"b.callstate as b_callstate,\n"
+									"b.callee_name as b_callee_name,\n"
+									"b.callee_num as b_callee_num,\n"
+									"b.callee_direction as b_callee_direction,\n"
+									"b.sent_callee_name as b_sent_callee_name,\n"
+									"b.sent_callee_num as b_sent_callee_num,\n"
+									"c.call_created_epoch as call_created_epoch \n"
+									"from channels a \n"
+									"left join calls c on a.uuid = c.caller_uuid and a.hostname = c.hostname \n"
+									"left join channels b on b.uuid = c.callee_uuid and b.hostname = c.hostname \n"
+									"where b_uuid is not null and  hostname='%q' and (a.uuid = c.caller_uuid or a.uuid not in (select callee_uuid from calls))\n"
+									"order by call_created_epoch  ;"
+								, switch_core_get_switchname());
 			if (argv[2] && !strcasecmp(argv[1], "as")) {
 				as = argv[2];
 			}
-- 
2.24.1.windows.2

